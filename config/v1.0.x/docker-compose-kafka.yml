# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

services:

    ca:
      image: hyperledger/fabric-ca
      container_name: ca0
      ports:
        - "7054:7054"
      environment:
        - FABRIC_CA_CLIENT_HOME=/etc/hyperledger/fabric-ca-server
      volumes:
        - "./ca:/etc/hyperledger/fabric-ca-server"
      command: sh -c 'fabric-ca-server start -b admin:adminpw'

    zookeeper0:
        container_name: zookeeper0
        image: hyperledger/fabric-zookeeper
        environment:
            - ZOO_MY_ID=1
            - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
        ports:
            - 2181
            - 2888
            - 3888

    zookeeper1:
        container_name: zookeeper1
        image: hyperledger/fabric-zookeeper
        environment:
            - ZOO_MY_ID=2
            - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
        ports:
            - 2181
            - 2888
            - 3888

    zookeeper2:
        container_name: zookeeper2
        image: hyperledger/fabric-zookeeper
        environment:
            - ZOO_MY_ID=3
            - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
        ports:
            - 2181
            - 2888
            - 3888

    kafka0:
        image: hyperledger/fabric-kafka
        container_name: kafka0
        environment:
            - KAFKA_MESSAGE_MAX_BYTES=103809024
            - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
            - KAFKA_BROKER_ID=0
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
            - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
            - KAFKA_DEFAULT_REPLICATION_FACTOR=3
            - KAFKA_MIN_INSYNC_REPLICAS=2
        ports:
            - 9092
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        links:
            - zookeeper0:zookeeper0
            - zookeeper1:zookeeper1
            - zookeeper2:zookeeper2

    kafka1:
        image: hyperledger/fabric-kafka
        container_name: kafka1
        environment:
            - KAFKA_MESSAGE_MAX_BYTES=103809024
            - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
            - KAFKA_BROKER_ID=1
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
            - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
            - KAFKA_DEFAULT_REPLICATION_FACTOR=3
            - KAFKA_MIN_INSYNC_REPLICAS=2
        ports:
            - 9092
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        links:
            - zookeeper0:zookeeper0
            - zookeeper1:zookeeper1
            - zookeeper2:zookeeper2

    kafka2:
        image: hyperledger/fabric-kafka
        container_name: kafka2
        environment:
            - KAFKA_MESSAGE_MAX_BYTES=103809024
            - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
            - KAFKA_BROKER_ID=2
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
            - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
            - KAFKA_DEFAULT_REPLICATION_FACTOR=3
            - KAFKA_MIN_INSYNC_REPLICAS=2
        ports:
            - 9092
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        links:
            - zookeeper0:zookeeper0
            - zookeeper1:zookeeper1
            - zookeeper2:zookeeper2

    kafka3:
        image: hyperledger/fabric-kafka
        container_name: kafka3
        environment:
            - KAFKA_MESSAGE_MAX_BYTES=103809024
            - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
            - KAFKA_BROKER_ID=3
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
            - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
            - KAFKA_DEFAULT_REPLICATION_FACTOR=3
            - KAFKA_MIN_INSYNC_REPLICAS=2
        ports:
            - 9092
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        links:
            - zookeeper0:zookeeper0
            - zookeeper1:zookeeper1
            - zookeeper2:zookeeper2

    orderer0:
        container_name: orderer0
        image: hyperledger/fabric-orderer
        environment:
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
            - ORDERER_GENERAL_LOCALMSPID=BlockChainCoCMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISPROFILE=MPLOrgOrdererGenesis
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=false
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/tls/server.key
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
        volumes:
            - ./channel-artifacts/kafka/orderer.block:/var/hyperledger/orderer/orderer.genesis.block
            - ./ca/BlockChainCoCMSP/orderer0/msp:/var/hyperledger/orderer/msp
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        links:
            - kafka0:kafka0
            - kafka1:kafka1
            - kafka2:kafka2
            - kafka3:kafka3

    orderer1:
        container_name: orderer1
        image: hyperledger/fabric-orderer
        environment:
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
            - ORDERER_GENERAL_LOCALMSPID=BlockChainCoCMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISPROFILE=MPLOrgOrdererGenesis
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=false
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/tls/server.key
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
        volumes:
            - ./channel-artifacts/kafka/orderer.block:/var/hyperledger/orderer/orderer.genesis.block
            - ./ca/BlockChainCoCMSP/orderer1/msp:/var/hyperledger/orderer/msp
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        links:
            - kafka0:kafka0
            - kafka1:kafka1
            - kafka2:kafka2
            - kafka3:kafka3

    orderer2:
        container_name: orderer2
        image: hyperledger/fabric-orderer
        environment:
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
            - ORDERER_GENERAL_LOCALMSPID=BlockChainCoCMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISPROFILE=MPLOrgOrdererGenesis
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=false
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/tls/server.key
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
        volumes:
            - ./channel-artifacts/kafka/orderer.block:/var/hyperledger/orderer/orderer.genesis.block
            - ./ca/BlockChainCoCMSP/orderer2/msp:/var/hyperledger/orderer/msp
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        links:
            - kafka0:kafka0
            - kafka1:kafka1
            - kafka2:kafka2
            - kafka3:kafka3

    orderer3:
        container_name: orderer3
        image: hyperledger/fabric-orderer
        environment:
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
            - ORDERER_GENERAL_LOCALMSPID=BlockChainCoCMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISPROFILE=MPLOrgOrdererGenesis
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=false
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/tls/server.key
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
        volumes:
            - ./channel-artifacts/kafka/orderer.block:/var/hyperledger/orderer/orderer.genesis.block
            - ./ca/BlockChainCoCMSP/orderer3/msp:/var/hyperledger/orderer/msp
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        links:
            - kafka0:kafka0
            - kafka1:kafka1
            - kafka2:kafka2
            - kafka3:kafka3

    peer0:
        container_name: peer0
        image: hyperledger/fabric-peer
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_PEER_ID=peer0
            - CORE_PEER_ADDRESSAUTODETECT=true
            - CORE_PEER_ADDRESS=peer0:7051
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0:7051
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=BlockChainCoCMSP
            - CORE_LOGGING_LEVEL=DEBUG
            # TLS settings
            - CORE_PEER_TLS_ENABLED=false
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ./ca/BlockChainCoCMSP/peer0/msp:/var/hyperledger/msp
        ports:
            - '7051'
            - '7053'
        depends_on:
            - orderer0
            - orderer1
            - orderer2
            - orderer3
        links:
            - orderer0
            - orderer1
            - orderer2
            - orderer3
        command: peer node start

    peer1:
        image: hyperledger/fabric-peer
        container_name: peer1
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_PEER_ID=peer1
            - CORE_PEER_ADDRESSAUTODETECT=true
            - CORE_PEER_ADDRESS=peer1:7051
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1:7051
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=BlockChainCoCMSP
            - CORE_LOGGING_LEVEL=DEBUG
            # TLS settings
            - CORE_PEER_TLS_ENABLED=false
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ./ca/BlockChainCoCMSP/peer1/msp:/var/hyperledger/msp
        ports:
            - '7051'
            - '7053'
        depends_on:
            - orderer0
            - orderer1
            - orderer2
            - orderer3
            - peer0
        links:
            - orderer0
            - orderer1
            - orderer2
            - orderer3
        command: peer node start

    peer2:
        image: hyperledger/fabric-peer
        container_name: peer2
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_PEER_ID=peer2
            - CORE_PEER_ADDRESSAUTODETECT=true
            - CORE_PEER_ADDRESS=peer2:7051
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer2:7051
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=BlockChainCoCMSP
            - CORE_LOGGING_LEVEL=DEBUG
            # TLS settings
            - CORE_PEER_TLS_ENABLED=false
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - /opt/gopath:/opt/gopath
            - ./ca/BlockChainCoCMSP/peer2/msp:/var/hyperledger/msp
        ports:
            - '7051'
            - '7053'
        depends_on:
            - orderer0
            - orderer1
            - orderer2
            - orderer3
            - peer0
            - peer1
        links:
            - orderer0
            - orderer1
            - orderer2
            - orderer3
        command: peer node start

    peer3:
        image: hyperledger/fabric-peer
        container_name: peer3
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_PEER_ID=peer3
            - CORE_PEER_ADDRESSAUTODETECT=true
            - CORE_PEER_ADDRESS=peer3:7051
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer3:7051
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=BlockChainCoCMSP
            - CORE_LOGGING_LEVEL=DEBUG
            # TLS settings
            - CORE_PEER_TLS_ENABLED=false
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - /opt/gopath:/opt/gopath
            - ./ca/BlockChainCoCMSP/peer3/msp:/var/hyperledger/msp
        ports:
            - '7051'
            - '7053'
        depends_on:
            - orderer0
            - orderer1
            - orderer2
            - orderer3
            - peer0
            - peer1
            - peer2
        links:
            - orderer0
            - orderer1
            - orderer2
            - orderer3
        command: peer node start

    cli:
        container_name: cli
        image: hyperledger/fabric-tools
        tty: true
        environment:
            - GOPATH=/opt/gopath
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_LOGGING_LEVEL=DEBUG
            # TLS settings
            - CORE_PEER_TLS_ENABLED=false
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
            - CORE_PEER_LOCALMSPID=BlockChainCoCMSP
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_ADDRESS=peer0:7051
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/config
        command: /bin/bash -c 'sleep 6000000000000000000'
        volumes:
            - /var/run/:/host/var/run/
            - ./ca/BlockChainCoCMSP/admins/msp:/var/hyperledger/msp
            - ./channel-artifacts/kafka:/opt/gopath/src/github.com/hyperledger/fabric/config
            - /home/blockchain/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go:/opt/gopath/src/chaincode/go
        ports:
            - '9092'
        depends_on:
          - orderer0
          - orderer1
          - orderer2
          - orderer3
          - peer0
          - peer1
          - peer2
          - peer3
